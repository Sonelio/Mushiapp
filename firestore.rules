rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && (
        // Allow users to update their own document
        request.auth.uid == userId ||
        // Allow setting admin role
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'updatedAt']) &&
         request.resource.data.role == 'admin')
      );
    }

    // Rules for templates collection
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}